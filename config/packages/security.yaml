security:
    role_hierarchy:
        ROLE_SAISISSEUR: ROLE_USER
        ROLE_VALIDATEUR: ROLE_SAISISSEUR
        ROLE_ADMIN:       ROLE_VALIDATEUR
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    encoders:
        App\Entity\Username:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\Username
                property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
            
            provider: app_user_provider

            form_login:
                login_path: app_login
                check_path: app_login
            logout:
                path: app_logout
                target: app_login
                # where to redirect after logout
                # target: app_any_route

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        #- { path: ^/access, roles: ROLE_ADMIN }
        #- { path: ^/autorisations, roles: ROLE_ADMIN }
        #- { path: ^/clients, roles: ROLE_ADMIN }
        #- { path: ^/conversions, roles: ROLE_ADMIN }
        #- { path: ^/etat, roles: ROLE_ADMIN }
        #- { path: ^/gestion_stocks, roles: ROLE_ADMIN }
        #- { path: ^/mouvements, roles: ROLE_ADMIN }
        #- { path: ^/piece_jointe, roles: ROLE_ADMIN }
        #- { path: ^/produits, roles: ROLE_ADMIN }
        #- { path: ^/projet, roles: ROLE_ADMIN }
        #- { path: ^/stocks, roles: ROLE_ADMIN }
        #- { path: ^/type_produits, roles: ROLE_ADMIN }
        #- { path: ^/unites, roles: ROLE_ADMIN }
        #- { path: ^/user, roles: ROLE_ADMIN }
        #- { path: ^/username, roles: ROLE_ADMIN }
        #- { path: ^/utilisateurs, roles: ROLE_ADMIN }
        #- { path: ^/validations, roles: ROLE_ADMIN }
        #- { path: ^/nouveau, roles: ROLE_ADMIN }
        #- { path: ^/validations, roles: ROLE_ADMIN }
        #- { path: ^/saisies, roles: ROLE_SAISISSEUR }
        #- { path: ^/validation, roles: ROLE_VALIDATEUR }
        #- { path: ^/valider, roles: ROLE_VALIDATEUR }
        #- { path: ^/annuler, roles: ROLE_VALIDATEUR }
        #- { path: ^/modifier, roles: ROLE_SAISISSEUR }
        #- { path: ^/saisie, roles: ROLE_SAISISSEUR }
        #- { path: ^/modif, roles: ROLE_SAISISSEUR }
        #- { path: ^/revalider, roles: ROLE_SAISISSEUR }
        #- { path: ^/historiques, roles: ROLE_VALIDATEUR }
        #- { path: ^/historiques_details, roles: ROLE_VALIDATEUR }
        #- { path: ^/etat, roles: ROLE_VALIDATEUR }
        #- { path: ^/entrer, roles: ROLE_SAISISSEUR }
        #- { path: ^/sortie, roles: ROLE_SAISISSEUR }
        #- { path: ^/retour, roles: ROLE_SAISISSEUR }
        #- { path: ^/remplacement, roles: ROLE_SAISISSEUR }
        #- { path: ^/rechercher, roles: ROLE_SAISISSEUR }
